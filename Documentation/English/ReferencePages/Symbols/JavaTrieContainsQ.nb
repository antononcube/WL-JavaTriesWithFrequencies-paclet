(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     79776,       1909]
NotebookOptionsPosition[     72162,       1746]
NotebookOutlinePosition[     72998,       1773]
CellTagsIndexPosition[     72918,       1768]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["JavaTrieContainsQ", "ObjectName",
 CellID->450538750],

Cell[TextData[{
 Cell["   ", "ModInfo",ExpressionUUID->"f9ad824e-4e66-4d3b-828d-274bc384a5c3"],
 Cell[BoxData[
  RowBox[{
   ButtonBox["JavaTrieContainsQ",
    BaseStyle->"Link",
    ButtonData->
     "paclet:AntonAntonov/JavaTriesWithFrequencies/ref/JavaTrieContainsQ"], 
   "[", " ", 
   RowBox[{
    StyleBox["jTr", "TI"], ",", 
    StyleBox["sw", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
  "2d8b3fe7-b447-412d-a8f7-b5ef4a2153a6"],
 "\[LineSeparator]finds is the list of strings ",
 Cell[BoxData[
  StyleBox["sw", "TI"]], "InlineFormula",ExpressionUUID->
  "732d4d3e-9904-4278-b77d-69d5c3fdf9f8"],
 " a complete match in the Java trie ",
 Cell[BoxData[
  StyleBox["jTr", "TI"]], "InlineFormula",ExpressionUUID->
  "3b54c69c-3e29-4060-8f31-f44e8c8ce8b5"],
 "."
}], "Usage",
 CellChangeTimes->{
  3.8919670128646793`*^9, {3.89220341144632*^9, 3.8922034235601187`*^9}, {
   3.892203547075519*^9, 3.8922035498159*^9}},
 CellID->177431928,ExpressionUUID->"e1d212ee-3fdd-4e51-ae50-8d5521897dea"],

Cell["Fundamental test function.", "Notes",
 CellChangeTimes->{3.892203533089632*^9},
 CellID->1391111860,ExpressionUUID->"120a37fa-a4b1-4b6b-8ddf-0c0523387010"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tech Notes",
 Cell[BoxData[
  TemplateBox[{"TechNotes", 
    Cell[
     BoxData[
      FrameBox[
       Cell["Insert links to related tech notes.", "MoreInfoText"], BaseStyle -> 
       "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "TechNotesSection",
 CellID->762566131],

Cell["XXXX", "Tutorials",
 CellID->266558421]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Links",
 Cell[BoxData[
  TemplateBox[{"RelatedLinks", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Insert links to any related page, including web pages.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "RelatedLinksSection",
 CellID->396494105],

Cell["XXXX", "RelatedLinks",
 CellID->234666094]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "See Also",
 Cell[BoxData[
  TemplateBox[{"SeeAlso", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Insert links to any related reference (function) pages.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "SeeAlsoSection",
 CellID->1253065966],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["JavaTrieCreate",
   BaseStyle->"Link",
   ButtonData->
    "paclet:AntonAntonov/JavaTriesWithFrequencies/ref/JavaTrieCreate"]], 
  "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},ExpressionUUID->
  "8dd2c934-3f79-4e5f-bddb-708199b2b3c6"],
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
 Cell[BoxData[
  ButtonBox["JavaTrieCreateBySplit",
   BaseStyle->"Link",
   ButtonData->
    "paclet:AntonAntonov/JavaTriesWithFrequencies/ref/JavaTrieCreateBySplit"]]\
, "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},
  CellTags->"6816a83f-07ef-4242-9c1f-83f540e8c5c6",ExpressionUUID->
  "2e097b44-885f-4b67-a263-757194ad77c5"],
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
 Cell[BoxData[
  ButtonBox["JavaTrieRetrieve",
   BaseStyle->"Link",
   ButtonData->
    "paclet:AntonAntonov/JavaTriesWithFrequencies/ref/JavaTrieRetrieve"]], 
  "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},
  CellTags->"4ba4258d-9cd2-43dd-b7d4-1a98d8473fa2",ExpressionUUID->
  "51b529c7-6796-476e-933e-a819b34ba62d"],
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
 Cell[BoxData[
  ButtonBox["JavaTrieKeyQ",
   BaseStyle->"Link",
   ButtonData->
    "paclet:AntonAntonov/JavaTriesWithFrequencies/ref/JavaTrieKeyQ"]], 
  "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},
  CellTags->"4c56d581-ce29-4b4d-8b35-53b49b012e3c",ExpressionUUID->
  "d3cf7580-1377-44df-980d-2726ac8a2f16"],
 Cell[BoxData[
  RowBox[{
  Cell[TextData[StyleBox[
   " \[FilledVerySmallSquare] ", "InlineSeparator"]],ExpressionUUID->
    "2dbedc22-8cac-43ee-bc20-8ffd6f99eabb"], 
   DynamicModuleBox[{$CellContext`nbobj$$ = NotebookObject[
    "54e912c3-bcfd-4f67-8789-5d098700b3f5", 
     "712e29ec-844b-4d04-b5e4-b0505529fbdc"], $CellContext`cellobj$$ = 
    CellObject[
    "f8d2f188-e70c-416a-bef0-7ced70663704", 
     "2a63796b-86db-41f9-bbfe-06b9a90842b3"]}, 
    TemplateBox[{
      GraphicsBox[{{
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         CircleBox[{0, 0}]}, {
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         LineBox[{{0, 0.62}, {0, -0.62}}]}, {
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         LineBox[{{-0.62, 0}, {0.62, 0}}]}}, 
       ImagePadding -> {{1., 1.}, {2.4, 1.}}, ImageSize -> 16, 
       PlotRange -> {{-1.06, 1.06}, {-1.06, 1.06}}, 
       BaselinePosition -> (Center -> 
        Center)], $CellContext`nbobj$$, $CellContext`cellobj$$},
     "InlineListingAddButton"],
    Initialization:>($CellContext`nbobj$$ = 
      EvaluationNotebook[]; $CellContext`cellobj$$ = EvaluationCell[])]}]], 
  "InlineListingAddButton",ExpressionUUID->
  "f8d2f188-e70c-416a-bef0-7ced70663704"]
}], "SeeAlso",
 CellChangeTimes->{{3.8922024102039423`*^9, 3.892202438019321*^9}, {
  3.8922025058101463`*^9, 3.892202550765378*^9}, {3.892203343361573*^9, 
  3.892203343361622*^9}, {3.892203442533863*^9, 3.892203454290745*^9}, {
  3.892203559478487*^9, 3.89220355947853*^9}},
 CellID->1261344663,ExpressionUUID->"334a5ec6-7d36-45a4-b0b5-1dcce9951d3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "MoreAboutSection",
 CellChangeTimes->{{3.843042374232973*^9, 3.843042375545676*^9}},
 CellID->1213585859,ExpressionUUID->"1c6150c2-2b94-46aa-907e-a134ef7a8220"],

Cell[TextData[ButtonBox["Java Tries with frequencies",
 BaseStyle->"Link",
 ButtonData->
  "paclet:AntonAntonov/JavaTriesWithFrequencies/guide/\
JavaTrieswithfrequencies"]], "MoreAbout",
 CellChangeTimes->{{3.892203567858778*^9, 3.892203602498535*^9}},
 CellID->2085336654,ExpressionUUID->"b334bf84-485f-421f-8d99-0306a9c975e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples Initialization",
 Cell[BoxData[
  TemplateBox[{"ExamplesInitialization", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Input that is to be evaluated before any examples are run, e.g. \
Needs[\[Ellipsis]].", "MoreInfoText"], BaseStyle -> "IFrameBox"]], 
     "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "ExamplesInitializationSection",
 CellID->1320024738],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<AntonAntonov`JavaTriesWithFrequencies`\>\"", 
  "]"}]], "ExampleInitialization",
 CellID->2214409]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     StyleBox[
      RowBox[{"Basic", " ", "Examples"}], "PrimaryExamplesSection"], 
     ButtonBox[
      RowBox[{
       RowBox[{"More", " ", "Examples"}], " ", "\[RightTriangle]"}],
      BaseStyle->"ExtendedExamplesLink",
      ButtonData:>"ExtendedExamples"]}
   }],
  $Line = 0; Null]], "PrimaryExamplesSection",
 CellID->710350064,ExpressionUUID->"890fe6fe-6f33-49b0-8ec0-19a7752d0cc3"],

Cell["Connect to Java's implementation: ", "ExampleText",
 CellChangeTimes->{{3.892030547321212*^9, 3.892030581477496*^9}, {
  3.8920311819639482`*^9, 3.892031184978036*^9}},
 CellID->1433688672,ExpressionUUID->"f1460c8e-443f-4781-b55c-8301801cd4f7"],

Cell[BoxData[
 RowBox[{"JavaTrieInstall", "[", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
    "$HomeDirectory", ",", "\"\<Downloads\>\"", ",", 
     "\"\<Java-TriesWithFrequencies.jar\>\""}], "}"}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.8920305092766953`*^9, 3.8920305216270437`*^9}, 
   3.892031118042994*^9},
 CellLabel->"In[1]:=",
 CellID->1555321691,ExpressionUUID->"bb3e31f4-3246-43c0-b11e-ce27349b4a58"],

Cell["Here is a list of words:", "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.891967299663167*^9, 3.89196730301511*^9}},
 CellID->1305895303,ExpressionUUID->"b6920f5d-2fb4-48b6-97d8-4f31ff148b01"],

Cell[BoxData[
 RowBox[{
  RowBox[{"words", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<war\>\"", ",", " ", "\"\<warm\>\"", ",", " ", "\"\<warn\>\"", ",", 
     " ", "\"\<wars\>\"", ",", " ", "\"\<work\>\"", ",", "\"\<car\>\"", ",", 
     " ", "\"\<cars\>\"", ",", " ", "\"\<caress\>\"", ",", " ", 
     "\"\<carbs\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.89203113981188*^9, 3.89203113981689*^9}, {
  3.892201188448751*^9, 3.892201188853532*^9}},
 CellLabel->"In[2]:=",
 CellID->363131318,ExpressionUUID->"862dfb52-a451-46a1-9264-9fd3fb3e3442"],

Cell["Make and visualize a Java trie:", "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.8919672879412947`*^9, 3.891967311879966*^9}, {
  3.892031164325035*^9, 3.8920311687437067`*^9}},
 CellID->465571565,ExpressionUUID->"4f90190f-6f15-4120-a195-7b5144d6da0b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"jTr", "=", 
   RowBox[{"JavaTrieCreate", "@", 
    RowBox[{"Map", "[", 
     RowBox[{"Characters", ",", "words"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"JavaTrieForm", "[", 
  RowBox[{"jTr", ",", 
   RowBox[{"ImageSize", "->", "Medium"}]}], "]"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8919673086324387`*^9, 3.891967323167713*^9}, {
  3.8919673860889187`*^9, 3.8919673884831123`*^9}, {3.892031146278789*^9, 
  3.8920311568753138`*^9}, {3.8920312218363132`*^9, 3.892031228786833*^9}, {
  3.892200659640829*^9, 3.8922007071291037`*^9}},
 CellLabel->"In[3]:=",
 CellID->844272446,ExpressionUUID->"fd21b0eb-a6c5-493a-98be-216ea8845b0a"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox[{
    {Hue[0, 1, 0.5], Opacity[1], Arrowheads[Medium], 
     ArrowBox[{
      DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
       "VertexID$2", Automatic, Center]}], 
     ArrowBox[{
      DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
       "VertexID$3", Automatic, Center]}], 
     ArrowBox[{
      DynamicLocation["VertexID$2", Automatic, Center], DynamicLocation[
       "VertexID$4", Automatic, Center]}], 
     ArrowBox[{
      DynamicLocation["VertexID$3", Automatic, Center], DynamicLocation[
       "VertexID$12", Automatic, Center]}], 
     ArrowBox[{
      DynamicLocation["VertexID$3", Automatic, Center], DynamicLocation[
       "VertexID$13", Automatic, Center]}], 
     ArrowBox[{
      DynamicLocation["VertexID$4", Automatic, Center], DynamicLocation[
       "VertexID$5", Automatic, Center]}], 
     ArrowBox[{
      DynamicLocation["VertexID$5", Automatic, Center], DynamicLocation[
       "VertexID$6", Automatic, Center]}], 
     ArrowBox[{
      DynamicLocation["VertexID$5", Automatic, Center], DynamicLocation[
       "VertexID$7", Automatic, Center]}], 
     ArrowBox[{
      DynamicLocation["VertexID$5", Automatic, Center], DynamicLocation[
       "VertexID$8", Automatic, Center]}], 
     ArrowBox[{
      DynamicLocation["VertexID$6", Automatic, Center], DynamicLocation[
       "VertexID$9", Automatic, Center]}], 
     ArrowBox[{
      DynamicLocation["VertexID$8", Automatic, Center], DynamicLocation[
       "VertexID$10", Automatic, Center]}], 
     ArrowBox[{
      DynamicLocation["VertexID$10", Automatic, Center], DynamicLocation[
       "VertexID$11", Automatic, Center]}], 
     ArrowBox[{
      DynamicLocation["VertexID$12", Automatic, Center], DynamicLocation[
       "VertexID$14", Automatic, Center]}], 
     ArrowBox[{
      DynamicLocation["VertexID$13", Automatic, Center], DynamicLocation[
       "VertexID$18", Automatic, Center]}], 
     ArrowBox[{
      DynamicLocation["VertexID$14", Automatic, Center], DynamicLocation[
       "VertexID$15", Automatic, Center]}], 
     ArrowBox[{
      DynamicLocation["VertexID$14", Automatic, Center], DynamicLocation[
       "VertexID$16", Automatic, Center]}], 
     ArrowBox[{
      DynamicLocation["VertexID$14", Automatic, Center], DynamicLocation[
       "VertexID$17", Automatic, Center]}], 
     ArrowBox[{
      DynamicLocation["VertexID$18", Automatic, Center], DynamicLocation[
       "VertexID$19", Automatic, Center]}]}, 
    {Hue[0.66, 1, 0.7], 
     TagBox[
      TagBox[
       TooltipBox[
        TagBox[InsetBox[
          FrameBox[
           RowBox[{"{", 
            RowBox[{"\<\"\"\>", ",", "9.`"}], "}"}],
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], {0., 6.}],
         "DynamicName",
         BoxID -> "VertexID$1"],
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\"\"", ",", "9.`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], "}"}]],
       Annotation[#, {{"", 9.}, {0, 0}}, "Tooltip"]& ],
      "DynamicName",
      BoxID -> "VertexLabelID$1"], 
     TagBox[
      TagBox[
       TooltipBox[
        TagBox[InsetBox[
          FrameBox[
           RowBox[{"{", 
            RowBox[{"\<\"c\"\>", ",", "4.`"}], "}"}],
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], {-3., 5.}],
         "DynamicName",
         BoxID -> "VertexID$2"],
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\"c\"", ",", "4.`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}]}], "}"}]],
       Annotation[#, {{"c", 4.}, {1, 0}}, "Tooltip"]& ],
      "DynamicName",
      BoxID -> "VertexLabelID$2"], 
     TagBox[
      TagBox[
       TooltipBox[
        TagBox[InsetBox[
          FrameBox[
           RowBox[{"{", 
            RowBox[{"\<\"w\"\>", ",", "5.`"}], "}"}],
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], {0., 5.}],
         "DynamicName",
         BoxID -> "VertexID$3"],
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\"w\"", ",", "5.`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}]}], "}"}]],
       Annotation[#, {{"w", 5.}, {1, 1}}, "Tooltip"]& ],
      "DynamicName",
      BoxID -> "VertexLabelID$3"], 
     TagBox[
      TagBox[
       TooltipBox[
        TagBox[InsetBox[
          FrameBox[
           RowBox[{"{", 
            RowBox[{"\<\"a\"\>", ",", "4.`"}], "}"}],
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], {-3., 4.}],
         "DynamicName",
         BoxID -> "VertexID$4"],
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\"a\"", ",", "4.`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"2", ",", "2"}], "}"}]}], "}"}]],
       Annotation[#, {{"a", 4.}, {2, 2}}, "Tooltip"]& ],
      "DynamicName",
      BoxID -> "VertexLabelID$4"], 
     TagBox[
      TagBox[
       TooltipBox[
        TagBox[InsetBox[
          FrameBox[
           RowBox[{"{", 
            RowBox[{"\<\"r\"\>", ",", "4.`"}], "}"}],
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], {-3., 3.}],
         "DynamicName",
         BoxID -> "VertexID$5"],
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\"r\"", ",", "4.`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"3", ",", "3"}], "}"}]}], "}"}]],
       Annotation[#, {{"r", 4.}, {3, 3}}, "Tooltip"]& ],
      "DynamicName",
      BoxID -> "VertexLabelID$5"], 
     TagBox[
      TagBox[
       TooltipBox[
        TagBox[InsetBox[
          FrameBox[
           RowBox[{"{", 
            RowBox[{"\<\"b\"\>", ",", "1.`"}], "}"}],
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], {-4., 2.}],
         "DynamicName",
         BoxID -> "VertexID$6"],
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\"b\"", ",", "1.`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"4", ",", "4"}], "}"}]}], "}"}]],
       Annotation[#, {{"b", 1.}, {4, 4}}, "Tooltip"]& ],
      "DynamicName",
      BoxID -> "VertexLabelID$6"], 
     TagBox[
      TagBox[
       TooltipBox[
        TagBox[InsetBox[
          FrameBox[
           RowBox[{"{", 
            RowBox[{"\<\"s\"\>", ",", "1.`"}], "}"}],
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], {-3., 2.}],
         "DynamicName",
         BoxID -> "VertexID$7"],
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\"s\"", ",", "1.`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"4", ",", "5"}], "}"}]}], "}"}]],
       Annotation[#, {{"s", 1.}, {4, 5}}, "Tooltip"]& ],
      "DynamicName",
      BoxID -> "VertexLabelID$7"], 
     TagBox[
      TagBox[
       TooltipBox[
        TagBox[InsetBox[
          FrameBox[
           RowBox[{"{", 
            RowBox[{"\<\"e\"\>", ",", "1.`"}], "}"}],
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], {-2., 2.}],
         "DynamicName",
         BoxID -> "VertexID$8"],
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\"e\"", ",", "1.`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"4", ",", "6"}], "}"}]}], "}"}]],
       Annotation[#, {{"e", 1.}, {4, 6}}, "Tooltip"]& ],
      "DynamicName",
      BoxID -> "VertexLabelID$8"], 
     TagBox[
      TagBox[
       TooltipBox[
        TagBox[InsetBox[
          FrameBox[
           RowBox[{"{", 
            RowBox[{"\<\"s\"\>", ",", "1.`"}], "}"}],
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], {-4., 1.}],
         "DynamicName",
         BoxID -> "VertexID$9"],
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\"s\"", ",", "1.`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"5", ",", "7"}], "}"}]}], "}"}]],
       Annotation[#, {{"s", 1.}, {5, 7}}, "Tooltip"]& ],
      "DynamicName",
      BoxID -> "VertexLabelID$9"], 
     TagBox[
      TagBox[
       TooltipBox[
        TagBox[InsetBox[
          FrameBox[
           RowBox[{"{", 
            RowBox[{"\<\"s\"\>", ",", "1.`"}], "}"}],
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], {-2., 1.}],
         "DynamicName",
         BoxID -> "VertexID$10"],
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\"s\"", ",", "1.`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"5", ",", "8"}], "}"}]}], "}"}]],
       Annotation[#, {{"s", 1.}, {5, 8}}, "Tooltip"]& ],
      "DynamicName",
      BoxID -> "VertexLabelID$10"], 
     TagBox[
      TagBox[
       TooltipBox[
        TagBox[InsetBox[
          FrameBox[
           RowBox[{"{", 
            RowBox[{"\<\"s\"\>", ",", "1.`"}], "}"}],
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], {-2., 0.}],
         "DynamicName",
         BoxID -> "VertexID$11"],
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\"s\"", ",", "1.`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"6", ",", "9"}], "}"}]}], "}"}]],
       Annotation[#, {{"s", 1.}, {6, 9}}, "Tooltip"]& ],
      "DynamicName",
      BoxID -> "VertexLabelID$11"], 
     TagBox[
      TagBox[
       TooltipBox[
        TagBox[InsetBox[
          FrameBox[
           RowBox[{"{", 
            RowBox[{"\<\"a\"\>", ",", "4.`"}], "}"}],
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], {0., 4.}],
         "DynamicName",
         BoxID -> "VertexID$12"],
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\"a\"", ",", "4.`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"2", ",", "10"}], "}"}]}], "}"}]],
       Annotation[#, {{"a", 4.}, {2, 10}}, "Tooltip"]& ],
      "DynamicName",
      BoxID -> "VertexLabelID$12"], 
     TagBox[
      TagBox[
       TooltipBox[
        TagBox[InsetBox[
          FrameBox[
           RowBox[{"{", 
            RowBox[{"\<\"o\"\>", ",", "1.`"}], "}"}],
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], {2., 4.}],
         "DynamicName",
         BoxID -> "VertexID$13"],
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\"o\"", ",", "1.`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"2", ",", "11"}], "}"}]}], "}"}]],
       Annotation[#, {{"o", 1.}, {2, 11}}, "Tooltip"]& ],
      "DynamicName",
      BoxID -> "VertexLabelID$13"], 
     TagBox[
      TagBox[
       TooltipBox[
        TagBox[InsetBox[
          FrameBox[
           RowBox[{"{", 
            RowBox[{"\<\"r\"\>", ",", "4.`"}], "}"}],
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], {0., 3.}],
         "DynamicName",
         BoxID -> "VertexID$14"],
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\"r\"", ",", "4.`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"3", ",", "12"}], "}"}]}], "}"}]],
       Annotation[#, {{"r", 4.}, {3, 12}}, "Tooltip"]& ],
      "DynamicName",
      BoxID -> "VertexLabelID$14"], 
     TagBox[
      TagBox[
       TooltipBox[
        TagBox[InsetBox[
          FrameBox[
           RowBox[{"{", 
            RowBox[{"\<\"s\"\>", ",", "1.`"}], "}"}],
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], {-1., 2.}],
         "DynamicName",
         BoxID -> "VertexID$15"],
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\"s\"", ",", "1.`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"4", ",", "13"}], "}"}]}], "}"}]],
       Annotation[#, {{"s", 1.}, {4, 13}}, "Tooltip"]& ],
      "DynamicName",
      BoxID -> "VertexLabelID$15"], 
     TagBox[
      TagBox[
       TooltipBox[
        TagBox[InsetBox[
          FrameBox[
           RowBox[{"{", 
            RowBox[{"\<\"m\"\>", ",", "1.`"}], "}"}],
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], {0., 2.}],
         "DynamicName",
         BoxID -> "VertexID$16"],
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\"m\"", ",", "1.`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"4", ",", "14"}], "}"}]}], "}"}]],
       Annotation[#, {{"m", 1.}, {4, 14}}, "Tooltip"]& ],
      "DynamicName",
      BoxID -> "VertexLabelID$16"], 
     TagBox[
      TagBox[
       TooltipBox[
        TagBox[InsetBox[
          FrameBox[
           RowBox[{"{", 
            RowBox[{"\<\"n\"\>", ",", "1.`"}], "}"}],
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], {1., 2.}],
         "DynamicName",
         BoxID -> "VertexID$17"],
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\"n\"", ",", "1.`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"4", ",", "15"}], "}"}]}], "}"}]],
       Annotation[#, {{"n", 1.}, {4, 15}}, "Tooltip"]& ],
      "DynamicName",
      BoxID -> "VertexLabelID$17"], 
     TagBox[
      TagBox[
       TooltipBox[
        TagBox[InsetBox[
          FrameBox[
           RowBox[{"{", 
            RowBox[{"\<\"r\"\>", ",", "1.`"}], "}"}],
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], {2., 3.}],
         "DynamicName",
         BoxID -> "VertexID$18"],
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\"r\"", ",", "1.`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"3", ",", "16"}], "}"}]}], "}"}]],
       Annotation[#, {{"r", 1.}, {3, 16}}, "Tooltip"]& ],
      "DynamicName",
      BoxID -> "VertexLabelID$18"], 
     TagBox[
      TagBox[
       TooltipBox[
        TagBox[InsetBox[
          FrameBox[
           RowBox[{"{", 
            RowBox[{"\<\"k\"\>", ",", "1.`"}], "}"}],
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], {2., 2.}],
         "DynamicName",
         BoxID -> "VertexID$19"],
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\"k\"", ",", "1.`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"4", ",", "17"}], "}"}]}], "}"}]],
       Annotation[#, {{"k", 1.}, {4, 17}}, "Tooltip"]& ],
      "DynamicName",
      BoxID -> "VertexLabelID$19"]}}],
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Medium]], "Output",
 CellChangeTimes->{3.892202401640944*^9, 3.892203371986957*^9, 
  3.8922034871008167`*^9},
 CellLabel->"Out[4]=",
 CellID->281565077,ExpressionUUID->"0f70b340-1536-429a-9d4c-77bc04030097"]
}, Open  ]],

Cell["Compare key test results for the search words above:", "ExampleText",
 CellChangeTimes->{{3.892202161924264*^9, 3.8922021688431177`*^9}, {
  3.892202211910565*^9, 3.892202229616189*^9}},
 CellID->2032427118,ExpressionUUID->"5459f6a8-ccf0-4348-89ad-7c2865af5ed2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Association", "@", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "->", 
      RowBox[{"JavaTrieContainsQ", "[", 
       RowBox[{"jTr", ",", 
        RowBox[{"Characters", "@", "#"}]}], "]"}]}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<ca\>\"", ",", "\"\<calm\>\"", ",", "\"\<war\>\"", ",", 
      "\"\<ward\>\""}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.892202103055284*^9, 3.892202141299686*^9}, {
  3.892202232250414*^9, 3.892202257990758*^9}, {3.8922025692610292`*^9, 
  3.892202584357876*^9}, {3.89220348019954*^9, 3.892203480897181*^9}},
 CellLabel->"In[5]:=",
 CellID->636879283,ExpressionUUID->"e7f7461c-dd90-4447-a612-0ac5f6fcfb24"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ca\"\>", "\[Rule]", "False"}], ",", 
   RowBox[{"\<\"calm\"\>", "\[Rule]", "False"}], ",", 
   RowBox[{"\<\"war\"\>", "\[Rule]", "True"}], ",", 
   RowBox[{"\<\"ward\"\>", "\[Rule]", "False"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.892202258282465*^9, {3.892202564459495*^9, 3.89220258621272*^9}, 
   3.892203374397715*^9, {3.892203481383192*^9, 3.892203487239456*^9}},
 CellLabel->"Out[5]=",
 CellID->1357774798,ExpressionUUID->"be21b715-3f6c-41dd-b160-8fcad8fadf80"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "More Examples",
 Cell[BoxData[
  TemplateBox[{"MoreExamples", 
    Cell[
     BoxData[
      FrameBox[
       Cell["Extended examples in standardized sections.", "MoreInfoText"], 
       BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "ExtendedExamplesSection",
 CellTags->"ExtendedExamples",
 CellID->991931975],

Cell[BoxData[
 InterpretationBox[Cell["Scope", "ExampleSection"],
  $Line = 0; Null]], "ExampleSection",
 CellID->485152164],

Cell[BoxData[
 InterpretationBox[Cell["Generalizations & Extensions", "ExampleSection"],
  $Line = 0; Null]], "ExampleSection",
 CellID->2104496336],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["Options", "ExampleSection"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1214253062],

Cell[BoxData[
 InterpretationBox[Cell["XXXX", "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->414115593],

Cell[BoxData[
 InterpretationBox[Cell["XXXX", "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->46271624]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell["Applications", "ExampleSection"],
  $Line = 0; Null]], "ExampleSection",
 CellID->298104354],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["Properties & Relations", "ExampleSection"],
  $Line = 0; Null]], "ExampleSection",
 CellID->160529227],

Cell["\<\
A word that is a key in the trie is not necessarily contained by the trie. \
Here is a comparison table: \
\>", "ExampleText",
 CellChangeTimes->{{3.892202677530113*^9, 3.892202725431802*^9}, {
  3.892202871301662*^9, 3.892202905681725*^9}},
 CellID->2095363033,ExpressionUUID->"1dbd7198-c73c-4c99-b60d-29220b2dc481"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Word\>\"", "->", "#"}], ",", 
       RowBox[{"\"\<JavaTrieKeyQ\>\"", "->", 
        RowBox[{"JavaTrieKeyQ", "[", 
         RowBox[{"jTr", ",", 
          RowBox[{"Characters", "@", "#"}]}], "]"}]}], ",", 
       RowBox[{"\"\<JavaTrieContainsQ\>\"", "->", 
        RowBox[{"JavaTrieContainsQ", "[", 
         RowBox[{"jTr", ",", 
          RowBox[{"Characters", "@", "#"}]}], "]"}]}]}], "|>"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<ca\>\"", ",", "\"\<car\>\"", ",", "\"\<calm\>\"", ",", "\"\<wa\>\"",
       ",", "\"\<war\>\"", ",", "\"\<ward\>\"", ",", "\"\<wor\>\"", ",", 
      "\"\<work\>\""}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.892202742679677*^9, 3.892202831051597*^9}, {
  3.892202944222498*^9, 3.8922029557674713`*^9}, {3.892203377948556*^9, 
  3.892203379130638*^9}},
 CellLabel->"In[6]:=",
 CellID->1966591180,ExpressionUUID->"2478b90f-8566-4620-bc56-630004f43efd"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Word" -> "ca", "JavaTrieKeyQ" -> True, "JavaTrieContainsQ" -> 
        False|>, <|
       "Word" -> "car", "JavaTrieKeyQ" -> True, "JavaTrieContainsQ" -> 
        True|>, <|
       "Word" -> "calm", "JavaTrieKeyQ" -> False, "JavaTrieContainsQ" -> 
        False|>, <|
       "Word" -> "wa", "JavaTrieKeyQ" -> True, "JavaTrieContainsQ" -> 
        False|>, <|
       "Word" -> "war", "JavaTrieKeyQ" -> True, "JavaTrieContainsQ" -> 
        True|>, <|
       "Word" -> "ward", "JavaTrieKeyQ" -> False, "JavaTrieContainsQ" -> 
        False|>, <|
       "Word" -> "wor", "JavaTrieKeyQ" -> True, "JavaTrieContainsQ" -> 
        False|>, <|
       "Word" -> "work", "JavaTrieKeyQ" -> True, "JavaTrieContainsQ" -> 
        True|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Word"} -> 
        1, {All, "JavaTrieKeyQ"} -> 1, {All, "JavaTrieContainsQ"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Word" -> TypeSystem`PackageScope`AtomShape[44.800000000000004`], 
            "JavaTrieKeyQ" -> TypeSystem`PackageScope`AtomShape[36], 
            "JavaTrieContainsQ" -> TypeSystem`PackageScope`AtomShape[36]|>], 
          DirectedInfinity[1], 3, {All}]], 8, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Word", "JavaTrieKeyQ", "JavaTrieContainsQ"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[TypeSystem`Boolean], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 8], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Word"} -> 
        1, {All, "JavaTrieKeyQ"} -> 1, {All, "JavaTrieContainsQ"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Word" -> TypeSystem`PackageScope`AtomShape[44.800000000000004`], 
            "JavaTrieKeyQ" -> TypeSystem`PackageScope`AtomShape[36], 
            "JavaTrieContainsQ" -> TypeSystem`PackageScope`AtomShape[36]|>], 
          DirectedInfinity[1], 3, {All}]], 8, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Word", "JavaTrieKeyQ", "JavaTrieContainsQ"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[TypeSystem`Boolean], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 8], "Path" -> {}, 
     "DisplayedRowCount" -> 8, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     8, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Word", 
                  Style[
                  "Word", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Word"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Word"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["JavaTrieKeyQ", 
                  Style[
                  "JavaTrieKeyQ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "JavaTrieKeyQ"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "JavaTrieKeyQ"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["JavaTrieContainsQ", 
                  Style[
                  "JavaTrieContainsQ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "JavaTrieContainsQ"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "JavaTrieContainsQ"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["ca", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Word"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["JavaTrieKeyQ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["JavaTrieContainsQ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["car", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Word"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["JavaTrieKeyQ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["JavaTrieContainsQ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["calm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Word"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["JavaTrieKeyQ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["JavaTrieContainsQ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["wa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Word"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["JavaTrieKeyQ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["JavaTrieContainsQ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["war", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Word"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["JavaTrieKeyQ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["JavaTrieContainsQ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ward", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Word"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["JavaTrieKeyQ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["JavaTrieContainsQ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["wor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Word"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["JavaTrieKeyQ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["JavaTrieContainsQ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["work", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Word"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["JavaTrieKeyQ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["JavaTrieContainsQ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{317., {161.193115234375, 167.806884765625}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{317., {161.193115234375, 167.806884765625}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.892202782015477*^9, 3.89220283165231*^9}, {
   3.892202946255076*^9, 3.892202956170603*^9}, 3.892203379478096*^9, 
   3.892203517116046*^9},
 CellLabel->"Out[6]=",
 CellID->1527045893,ExpressionUUID->"fdb3551c-b3d4-4029-a72c-670056578206"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell["Possible Issues", "ExampleSection"],
  $Line = 0; Null]], "ExampleSection",
 CellID->775257557],

Cell[BoxData[
 InterpretationBox[Cell["Interactive Examples", "ExampleSection"],
  $Line = 0; Null]], "ExampleSection",
 CellID->970474150],

Cell[BoxData[
 InterpretationBox[Cell["Neat Examples", "ExampleSection"],
  $Line = 0; Null]], "ExampleSection",
 CellID->620740085]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metadata", "MetadataSection",
 CellID->303051469],

Cell[TextData[{
 "New in: ",
 Cell["1.0.0", "HistoryData",
  CellTags->"New",ExpressionUUID->"25e5264f-22f4-4a2c-841d-e3653323725d"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"8e95f08c-3533-4bc3-b756-4330943b42cc"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->
  "10394fb7-a0ca-4317-a579-b77e70dcf94f"]
}], "History",
 CellChangeTimes->{{3.864923683926749*^9, 3.864923685610183*^9}, {
  3.8922034635065403`*^9, 3.892203464533175*^9}},
 CellID->1702312446,ExpressionUUID->"646265fe-4e59-4f40-9209-28d260a6882f"],

Cell[CellGroupData[{

Cell[TextData[{
 "Categorization",
 Cell[BoxData[
  TemplateBox[{"Metadata", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Metadata such as page URI, context, and type of documentation page.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "CategorizationSection",
 CellID->1988134588],

Cell["Symbol", "Categorization",
 CellLabel->"Entity Type",
 CellID->1879956843],

Cell["AntonAntonov/JavaTriesWithFrequencies", "Categorization",
 CellLabel->"Paclet Name",
 CellID->1893602882],

Cell["AntonAntonov`JavaTriesWithFrequencies`", "Categorization",
 CellLabel->"Context",
 CellID->75989234],

Cell["AntonAntonov/JavaTriesWithFrequencies/ref/JavaTrieContainsQ", \
"Categorization",
 CellLabel->"URI",
 CellID->1545769520]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->112401956],

Cell["XXXX", "Keywords",
 CellID->1501548779]
}, Closed]],

Cell[CellGroupData[{

Cell["Syntax Templates", "TemplatesSection",
 CellID->1449992756],

Cell[BoxData[""], "Template",
 CellLabel->"Additional Function Template",
 CellID->383823936],

Cell[BoxData[""], "Template",
 CellLabel->"Arguments Pattern",
 CellID->2035500411],

Cell[BoxData[""], "Template",
 CellLabel->"Local Variables",
 CellID->1240910967],

Cell[BoxData[""], "Template",
 CellLabel->"Color Equal Signs",
 CellID->1776926352]
}, Closed]]
}, Open  ]]
},
WindowSize->{1214, 962},
WindowMargins->{{1091, Automatic}, {Automatic, 12}},
TaggingRules-><|"Paclet" -> "AntonAntonov/JavaTriesWithFrequencies"|>,
CellContext->"Global`",
Magnification:>1.25 Inherited,
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "FunctionPageStylesExt.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"54e912c3-bcfd-4f67-8789-5d098700b3f5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ExtendedExamples"->{
  Cell[27897, 822, 374, 12, 72, "ExtendedExamplesSection",ExpressionUUID->"d664c27f-ae21-428e-a6e9-676dd1e43d7c",
   CellTags->"ExtendedExamples",
   CellID->991931975]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ExtendedExamples", 72724, 1761}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 59, 1, 92, "ObjectName",ExpressionUUID->"1475977f-3268-4502-ba0b-e512a4efb04c",
 CellID->450538750],
Cell[642, 25, 1001, 26, 100, "Usage",ExpressionUUID->"e1d212ee-3fdd-4e51-ae50-8d5521897dea",
 CellID->177431928],
Cell[1646, 53, 161, 2, 33, "Notes",ExpressionUUID->"120a37fa-a4b1-4b6b-8ddf-0c0523387010",
 CellID->1391111860]
}, Open  ]],
Cell[CellGroupData[{
Cell[1844, 60, 322, 11, 51, "TechNotesSection",ExpressionUUID->"63d2fdac-d8c3-4c52-aa35-ba0da5f1d54d",
 CellID->762566131],
Cell[2169, 73, 45, 1, 24, "Tutorials",ExpressionUUID->"857f745a-aae6-424f-ba4c-5f1c28c84c7c",
 CellID->266558421]
}, Open  ]],
Cell[CellGroupData[{
Cell[2251, 79, 359, 12, 50, "RelatedLinksSection",ExpressionUUID->"01b45553-d176-4dc6-80a4-443c661acaa9",
 CellID->396494105],
Cell[2613, 93, 48, 1, 24, "RelatedLinks",ExpressionUUID->"6b54d6d6-a529-4316-ae93-2c61055058f5",
 CellID->234666094]
}, Open  ]],
Cell[CellGroupData[{
Cell[2698, 99, 346, 12, 50, "SeeAlsoSection",ExpressionUUID->"2a093865-3a5d-420a-add2-e2b8e9874835",
 CellID->1253065966],
Cell[3047, 113, 3203, 78, 30, "SeeAlso",ExpressionUUID->"334a5ec6-7d36-45a4-b0b5-1dcce9951d3f",
 CellID->1261344663]
}, Open  ]],
Cell[CellGroupData[{
Cell[6287, 196, 184, 2, 50, "MoreAboutSection",ExpressionUUID->"1c6150c2-2b94-46aa-907e-a134ef7a8220",
 CellID->1213585859],
Cell[6474, 200, 328, 6, 24, "MoreAbout",ExpressionUUID->"b334bf84-485f-421f-8d99-0306a9c975e4",
 CellID->2085336654]
}, Open  ]],
Cell[CellGroupData[{
Cell[6839, 211, 418, 13, 87, "ExamplesInitializationSection",ExpressionUUID->"598e85b4-4d25-4eb7-bdbc-eb83b5a85523",
 CellID->1320024738],
Cell[7260, 226, 140, 3, 57, "ExampleInitialization",ExpressionUUID->"e6679f44-758e-401a-97ba-24ed7d8cb92a",
 CellID->2214409]
}, Open  ]],
Cell[CellGroupData[{
Cell[7437, 234, 442, 12, 90, "PrimaryExamplesSection",ExpressionUUID->"890fe6fe-6f33-49b0-8ec0-19a7752d0cc3",
 CellID->710350064],
Cell[7882, 248, 250, 3, 30, "ExampleText",ExpressionUUID->"f1460c8e-443f-4781-b55c-8301801cd4f7",
 CellID->1433688672],
Cell[8135, 253, 439, 11, 91, "Input",ExpressionUUID->"bb3e31f4-3246-43c0-b11e-ce27349b4a58",
 CellID->1555321691],
Cell[8577, 266, 207, 3, 30, "ExampleText",ExpressionUUID->"b6920f5d-2fb4-48b6-97d8-4f31ff148b01",
 CellID->1305895303],
Cell[8787, 271, 569, 12, 58, "Input",ExpressionUUID->"862dfb52-a451-46a1-9264-9fd3fb3e3442",
 CellID->363131318],
Cell[9359, 285, 267, 4, 30, "ExampleText",ExpressionUUID->"4f90190f-6f15-4120-a195-7b5144d6da0b",
 CellID->465571565],
Cell[CellGroupData[{
Cell[9651, 293, 699, 16, 58, "Input",ExpressionUUID->"fd21b0eb-a6c5-493a-98be-216ea8845b0a",
 CellID->844272446],
Cell[10353, 311, 15906, 464, 449, "Output",ExpressionUUID->"0f70b340-1536-429a-9d4c-77bc04030097",
 CellID->281565077]
}, Open  ]],
Cell[26274, 778, 268, 3, 30, "ExampleText",ExpressionUUID->"5459f6a8-ccf0-4348-89ad-7c2865af5ed2",
 CellID->2032427118],
Cell[CellGroupData[{
Cell[26567, 785, 710, 17, 58, "Input",ExpressionUUID->"e7f7461c-dd90-4447-a612-0ac5f6fcfb24",
 CellID->636879283],
Cell[27280, 804, 568, 12, 32, "Output",ExpressionUUID->"be21b715-3f6c-41dd-b160-8fcad8fadf80",
 CellID->1357774798]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27897, 822, 374, 12, 72, "ExtendedExamplesSection",ExpressionUUID->"d664c27f-ae21-428e-a6e9-676dd1e43d7c",
 CellTags->"ExtendedExamples",
 CellID->991931975],
Cell[28274, 836, 124, 3, 43, "ExampleSection",ExpressionUUID->"10302601-a9b5-40ef-ba10-020cc070e415",
 CellID->485152164],
Cell[28401, 841, 148, 3, 27, "ExampleSection",ExpressionUUID->"f304ff9e-ae39-47a5-8d36-ce2722c5ca1a",
 CellID->2104496336],
Cell[CellGroupData[{
Cell[28574, 848, 127, 3, 27, "ExampleSection",ExpressionUUID->"d6b6582c-d4f5-40dd-932f-42a7b00c212e",
 CellID->1214253062],
Cell[28704, 853, 129, 3, 32, "ExampleSubsection",ExpressionUUID->"3eb0348d-ea92-446a-a476-86c080c2691c",
 CellID->414115593],
Cell[28836, 858, 128, 3, 26, "ExampleSubsection",ExpressionUUID->"96db841a-0376-4179-a1cb-116e13f7f774",
 CellID->46271624]
}, Open  ]],
Cell[28979, 864, 131, 3, 43, "ExampleSection",ExpressionUUID->"09d65792-7d14-4770-a4b4-beb9c7f506c6",
 CellID->298104354],
Cell[CellGroupData[{
Cell[29135, 871, 141, 3, 27, "ExampleSection",ExpressionUUID->"fd6e1bcc-7adc-4955-9102-134351db3de5",
 CellID->160529227],
Cell[29279, 876, 327, 6, 30, "ExampleText",ExpressionUUID->"1dbd7198-c73c-4c99-b60d-29220b2dc481",
 CellID->2095363033],
Cell[CellGroupData[{
Cell[29631, 886, 1051, 25, 106, "Input",ExpressionUUID->"2478b90f-8566-4620-bc56-630004f43efd",
 CellID->1966591180],
Cell[30685, 913, 38892, 726, 344, "Output",ExpressionUUID->"fdb3551c-b3d4-4029-a72c-670056578206",
 CellID->1527045893]
}, Open  ]]
}, Open  ]],
Cell[69604, 1643, 134, 3, 43, "ExampleSection",ExpressionUUID->"26694f20-599e-45b6-88d3-7ccea8d926a5",
 CellID->775257557],
Cell[69741, 1648, 139, 3, 27, "ExampleSection",ExpressionUUID->"28dfa584-32e8-4c28-b46b-e31b63f2a15e",
 CellID->970474150],
Cell[69883, 1653, 132, 3, 27, "ExampleSection",ExpressionUUID->"a936f5ac-8721-4645-b868-2390129df363",
 CellID->620740085]
}, Open  ]],
Cell[CellGroupData[{
Cell[70052, 1661, 55, 1, 90, "MetadataSection",ExpressionUUID->"f4d45392-7d6b-49b3-a39c-8e6db4b5d966",
 CellID->303051469],
Cell[70110, 1664, 597, 14, 33, "History",ExpressionUUID->"646265fe-4e59-4f40-9209-28d260a6882f",
 CellID->1702312446],
Cell[CellGroupData[{
Cell[70732, 1682, 372, 12, 27, "CategorizationSection",ExpressionUUID->"8712f4ee-98ac-450d-8246-464271deef8a",
 CellID->1988134588],
Cell[71107, 1696, 80, 2, 87, "Categorization",ExpressionUUID->"b79e28fb-ae6c-4ef5-a575-57b2f4dbc0e2",
 CellID->1879956843],
Cell[71190, 1700, 111, 2, 87, "Categorization",ExpressionUUID->"8f4c98b9-c804-491c-b445-68947122fe39",
 CellID->1893602882],
Cell[71304, 1704, 106, 2, 87, "Categorization",ExpressionUUID->"aee73450-ecde-481e-bf58-746eac8eac34",
 CellID->75989234],
Cell[71413, 1708, 127, 3, 87, "Categorization",ExpressionUUID->"0b1c9992-2f78-4d33-aee9-fb7d1ec63bda",
 CellID->1545769520]
}, Closed]],
Cell[CellGroupData[{
Cell[71577, 1716, 55, 1, 26, "KeywordsSection",ExpressionUUID->"7cd2aa6c-92f1-4b63-8271-ff3b32e79d54",
 CellID->112401956],
Cell[71635, 1719, 45, 1, 87, "Keywords",ExpressionUUID->"3a27fb76-815a-4ef6-ab01-d84710cb7e98",
 CellID->1501548779]
}, Closed]],
Cell[CellGroupData[{
Cell[71717, 1725, 65, 1, 26, "TemplatesSection",ExpressionUUID->"1bdb9b2b-40eb-4f87-9edf-74efc1e09f5b",
 CellID->1449992756],
Cell[71785, 1728, 93, 2, 87, "Template",ExpressionUUID->"989155aa-a35a-4725-b37a-76e3b085be30",
 CellID->383823936],
Cell[71881, 1732, 83, 2, 87, "Template",ExpressionUUID->"6ddaa465-dd7f-4557-87d9-c1dd8da8d01e",
 CellID->2035500411],
Cell[71967, 1736, 81, 2, 87, "Template",ExpressionUUID->"f4ec59b2-aeab-4895-b6fe-1d6f218aa229",
 CellID->1240910967],
Cell[72051, 1740, 83, 2, 87, "Template",ExpressionUUID->"cb362b57-9521-4972-9e39-80194f5c82bc",
 CellID->1776926352]
}, Closed]]
}, Open  ]]
}
]
*)

